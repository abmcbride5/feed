{"ast":null,"code":"var _jsxFileName = \"/Users/Mick/feed/src/components/thread.js\";\nimport react from \"react\";\nimport Message from './message';\nimport '../css/thread.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Thread = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"threadContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"threadHeader\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), props.messages.map(message => {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        body: message.body,\n        user: message.user,\n        users: props.users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 55\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Thread;\nexport default Thread;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"sources":["/Users/Mick/feed/src/components/thread.js"],"names":["react","Message","Thread","props","title","messages","map","message","body","user","users"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,gBAA8BA,KAAK,CAACC;AAApC;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKD,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAoBC,OAAD,IAAa;AAAC,0BAAQ,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEA,OAAO,CAACC,IAAvB;AAA6B,QAAA,IAAI,EAAED,OAAO,CAACE,IAA3C;AAAiD,QAAA,KAAK,EAAEN,KAAK,CAACO;AAA9D;AAAA;AAAA;AAAA;AAAA,cAAR;AAAiF,KAAlH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;KAAMR,M;AASN,eAAeA,MAAf","sourcesContent":["import react from \"react\";\nimport Message from './message';\nimport '../css/thread.css';\n\nconst Thread = (props) => {\n    return(\n        <div className=\"threadContainer\">\n            <h1 className=\"threadHeader\">{props.title}</h1>\n            {props.messages.map((message) => {return (<Message body={message.body} user={message.user} users={props.users} />)})}\n        </div>\n    )\n}\n\nexport default Thread;"]},"metadata":{},"sourceType":"module"}